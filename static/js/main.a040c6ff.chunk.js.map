{"version":3,"sources":["component/Dashboard/Dashboard.tsx","component/NoMatch/NoMatch.tsx","component/NewGame/NewGame.tsx","component/History/History.tsx","component/Header/Header.tsx","component/sidemenu/SideMenu.tsx","component/Root/Root.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Dashboard","NoMatch","to","initializeSquare","JSON","parse","window","localStorage","getItem","Array","fill","NewGame","useState","squares","setSquares","useEffect","setItem","stringify","nextValue","filter","Boolean","length","calculateNextValue","winner","lines","i","a","b","c","calculateWinner","status","every","calculateStatus","renderSquare","className","onClick","squaresCopy","selectSquare","type","History","Header","SideMenu","Root","App","path","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a040c6ff.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Dashboard() {\n  return (\n    <>\n      <div>This is Dashboard</div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import { Link } from \"react-router-dom\";\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\n\nconst initializeSquare =\n  JSON.parse(window.localStorage.getItem(\"squares\") as string) || Array(9).fill(null);\n\nfunction NewGame() {\n  const [squares, setSquares] = useState(initializeSquare);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"squares\", JSON.stringify(squares));\n  });\n\n  const nextValue: string = calculateNextValue(squares);\n  const winner: string = calculateWinner(squares);\n  const status: string = calculateStatus(winner, squares, nextValue);\n\n  function calculateStatus(winner: string, squares: any, nextValue: string) {\n    return winner\n      ? `Winner: ${winner}`\n      : squares.every(Boolean)\n      ? `Match Tied`\n      : `Next Player: ${nextValue}`;\n  }\n\n  function calculateWinner(squares: string[]) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n\n    return \"\";\n  }\n\n  function calculateNextValue(squares: string[]) {\n    return squares.filter(Boolean).length % 2 === 0 ? \"X\" : \"O\";\n  }\n\n  function selectSquare(i: number) {\n    if (winner || squares[i]) {\n      return;\n    }\n\n    let squaresCopy = [...squares];\n    squaresCopy[i] = nextValue;\n    setSquares(squaresCopy);\n  }\n\n  function renderSquare(i: number) {\n    return (\n      <button className=\"box\" onClick={() => selectSquare(i)}>\n        {squares[i]}\n      </button>\n    );\n  }\n\n  function restart() {\n    setSquares(Array(9).fill(null));\n  }\n\n  return (\n    <>\n      <div> {status} </div>\n      <div className=\"game-board\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n\n      <button type=\"button\" onClick={() => restart()}>\n        Reset\n      </button>\n    </>\n  );\n}\n\nexport default NewGame;\n","import React from \"react\";\n\nfunction History() {\n  return (\n    <>\n      <div>Coming soon !</div>\n    </>\n  );\n}\n\nexport default History;\n","import './style.css'\n\nfunction Header() {\n  return (\n    <>\n      <div className=\"header\">Tic Tac Toe</div>\n    </>\n  );\n}\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction SideMenu() {\n  return (\n    <>\n      <div>\n        <nav className=\"sidenav\">\n          <div>\n            <Link to=\"/\">Dashboard</Link>\n          </div>\n          <div>\n            <Link to=\"/new\">New Game</Link>\n          </div>\n          <div>\n            <Link to=\"/history\"> History</Link>\n          </div>\n        </nav>\n      </div>\n    </>\n  );\n}\n\nexport default SideMenu;\n","import { Outlet } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport SideMenu from \"../sidemenu/SideMenu\";\n\nfunction Root() {\n  return (\n    <>\n      <Header />\n      <SideMenu />\n      <div className=\"main\">\n        <Outlet />\n      </div>\n    </>\n  );\n}\n\nexport default Root;\n","import \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"./component/Dashboard/Dashboard\";\nimport NoMatch from \"./component/NoMatch/NoMatch\";\nimport NewGame from \"./component/NewGame/NewGame\";\nimport History from \"./component/History/History\";\nimport Root from \"./component/Root/Root\";\n\nfunction App() {\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Root />}>\n          <Route index element={<Dashboard />}></Route>\n          <Route path=\"new\" element={<NewGame />}></Route>\n          <Route path=\"history\" element={<History />}></Route>\n          <Route path=\"*\" element={<NoMatch />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}